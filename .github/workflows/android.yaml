---
name: Android Build
env:
  cacheId: "9"
on:
  workflow_dispatch: null
  push:
    tags:
     - '*'

jobs:
  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compile-sdk:
          - 33
        build-tools:
          - 33.0.2
        sdk-tools:
          - 4333796
    steps:
      - uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: ./.github/actions/setup-node
      - name: setup ubuntu
        run: |
          sudo apt-get --quiet update --yes
          sudo apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
          cache: gradle
      - name: Setup Android SDK
        working-directory: ./packages/legacy/app/android
        run: >
          set -x

          sudo mkdir -p /root/.android

          sudo touch /root/.android/repositories.cfg

          export ANDROID_HOME=$PWD/android-sdk

          mkdir -p $ANDROID_HOME/cmdline-tools

          wget --quiet --output-document=commandlinetools-linux.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip

          unzip -d $ANDROID_HOME/cmdline-tools commandlinetools-linux.zip

          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest

          find $ANDROID_HOME -name sdkmanager


          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin

          echo y | sdkmanager "platforms;android-${{ matrix.compile-sdk }}" >/dev/null

          echo y | sdkmanager "platform-tools" >/dev/null

          echo y | sdkmanager "build-tools;${{ matrix.build-tools }}" >/dev/null

          find $ANDROID_HOME -type f -executable -print


          chmod +x ./gradlew

          set +o pipefail

          yes | sdkmanager --licenses

          set -o pipefail
      - name: Install React Native Dependencies
        run: |
          node -v && yarn -v && yarn install --immutable && \
          git status
      - name: Build Workspace
        run: |
          yarn lerna run build

      #builds changelog but just fetches last commit
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4.0.0
        if: startsWith(github.ref, 'refs/tags/')
        # with:
          # configuration: ".github/config/configuration.json"
          # ignorePreReleases: ${{ !contains(github.ref, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Android Release Build
        working-directory: ./packages/legacy/app/android
        run: ./gradlew --no-daemon assembleRelease

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: ./packages/legacy/app/android/app/build/outputs/apk/release/
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      # - name: Get version
      #   run: echo "VERSION_INFORMATION=$(${{github.workspace}}/gradlew -q
      #     printVersionInformation)" >> $GITHUB_ENV


      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          prerelease: true
          files: >
            ./packages/legacy/app/android/app/build/outputs/apk/release/app-release.apk
          tag_name: ${{ github.ref_name }}
          body: ${{steps.github_release.outputs.changelog}}

      - name: upload artefact to App Center
        uses: wzieba/AppCenter-Github-Action@v1
        with:
          appName: wzieba/Sample-App
          token: ${{secrets.APPCENTER_KEY}}
          group: Collaborators
          file: ./packages/legacy/app/android/app/build/outputs/apk/release/app-release.apk
          notifyTesters: true
          debug: false
          releaseNotes: |
            ${{steps.github_release.outputs.changelog}}


